#!/bin/bash

trap 'echo Error: $0: stopped; exit 1' ERR
set -u
set -e

if ! type brew >/dev/null 2>&1; then
    echo 'Requirement: brew' 1>&2
    exit 1
fi

echo 'updating brew...'

brew update
outdated=$(brew outdated)

if [ -n "$outdated" ]; then
    echo 'following package(s) will be upgraded.'
    echo ''
    echo "$outdated"
    echo 'Are you sure?'
    echo 'If you do not want to upgrade, Please type Ctrl-c now.'
    echo ''

    # wait Ctrl-c
    read dummy

    brew upgrade
fi

declare -a BREW_PACKAGES=(
    "gcc"
    "ansible"
    "ios-sim"
    "groovy"
    "gradle"
    "pandoc"
    "imagemagick"
    "node"
    "readline"
    "git"
    "tig"
    "zsh"
    "z"
    "tree"
    "openssl"
    "ruby-build"
    "rbenv"
    "tmux"
    "reattach-to-user-namespace"
    "go"
    "docker"
    "boot2docker"
    "python"
    "libgit2 --with-libssh2"
    "automake"
    "wget"
    "peco/peco/peco"
    "homebrew/binary/jad"
    "homebrew/binary/dex2jar"
)

for package in "${BREW_PACKAGES[@]}"
do
    if brew list -1 | grep -q "^${basename $package}"; then
        echo "Skip: brew install ${package}"
    else
        brew install $package
    fi
done
